upstream forward_<%= @fqdn.gsub('.', '_') %> {
  server <%= @ipv4_address %>:80;
}

<% if @secure %>
server {
  listen 80;
  server_name <%= @fqdn %>;

  location / {
    return 301 https://$server_name$request_uri;
  }
}
<% end %>

server {
  <% if @secure %>
  listen 443 ssl http2;
  <% else %>
  listen 80;
  <% end %>
  server_name <%= @fqdn %>;

  client_max_body_size 0;

  <% if @access_log_options == 'off' %>
  access_log off;
  <% else %>
  access_log <%= @access_log %><% unless @access_log_options.empty? %> <%= @access_log_options %><% end %>;
  <% end %>
  error_log <%= @error_log %><% unless @error_log_options.empty? %> <%= @error_log_options %><% end %>;

  <% if @secure %>
  <% @certificate_entries.each do |item| %>
  ssl_certificate <%= item.certificate_path %>; # CRC32: <%= item.certificate_checksum %>
  ssl_certificate_key <%= item.certificate_private_key_path %>; # CRC32: <%= item.certificate_private_key_checksum %>
  <% end %>

  add_header Strict-Transport-Security 'max-age=<%= @hsts_max_age %>' always;

  <% if @ocsp_stapling %>
  ssl_stapling on;
  ssl_stapling_verify on;
  resolver <%= @resolvers.join(' ') %> valid=<%= @resolver_valid %>s;
  resolver_timeout <%= @resolver_timeout %>s;
  <% end %>
  <% end %>

  location /api/stream {
    proxy_set_header Connection '';
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For $remote_addr;

    proxy_pass http://forward_<%= @fqdn.gsub('.', '_') %>/api/stream;
    proxy_redirect off;

    proxy_http_version 1.1;
    chunked_transfer_encoding off;
    proxy_buffering off;
    proxy_cache off;
    proxy_read_timeout 30m;
  }

  location / {
    proxy_http_version 1.1;
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_redirect off;
    proxy_pass http://forward_<%= @fqdn.gsub('.', '_') %>$request_uri;
  }
}
